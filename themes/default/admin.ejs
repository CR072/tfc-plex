<!DOCTYPE html>
<html lang="en">
  <%- include('./components/head') %>
  <body>
    <div class="container-scroller">
      <%- include('./components/adminsidebar') %>
      <div class="container-fluid page-body-wrapper">
        <%- include('./components/topnav') %>
        <div class="main-panel">
          <div style="background-color: #111319" class="content-wrapper">
           <h2>Admin</h2>
           <p class="text-gray">Use tfc-plex's admin settings.</p>










            <% if (req.query.err) { %>
              <% if (req.query.err !== "none") { %>
                <div style="border-radius: 15px;" class="alert">
                  <% if (req.query.err == "MISSINGID") { %>
                      You have not provided the Discord user ID.
				    <% } else if (req.query.err == "CREATECOUPONINVALIDCHARACTERS") { %>
					One of the characters you entered in coupon creation was invalid, please try again.
				    <% } else if (req.query.err == "REVOKECOUPONCANNOTFINDCODE") { %>
					One of the characters you entered in coupon revoke was invalid, please try again.
				    <% } else if (req.query.err == "CREATECOUPONEMPTY") { %>
					While creating your coupon you did not specify to give any resources or coins.
				    <% } else if (req.query.err == "CREATECOUPONLESSTHANONE") { %>
					While creating your coupon you tried to give less then one in RAM, DISK, CPU and/or coins.
                  <% } else if (req.query.err == "INVALIDID") { %>
                      You have provided a Discord user ID that does not exist, or has not signed up on the dashboard.
                  <% } else if (req.query.err == "MISSINGVARIABLES") { %>
                      You have not provided either ram, disk, cpu, and/or servers.
                  <% } else if (req.query.err == "RAMSIZE" || req.query.err == "DISKSIZE" || req.query.err == "CPUSIZE" || req.query.err == "SERVERSIZE") { %>
                      The RAM, disk, CPU and servers number cannot be less than 0 and must be above 999999999999999.
                  <% } else { %>
                      Stop admin abusing.
                  <% } %>
                </div>
              <% } else if (req.query.err == "none") { %>
                <div class="alert" style="background-color: #007fcc; border-radius: 15px;">
                  Success! Action completed
                </div>
              <% } %>
            <% } %>
				    <% if (req.query.code) { %>
					<div class="alert" style="background-color: #007fcc; border-radius: 15px;">
					Success! You have created a coupon code with the name of: <%= req.query.code %>
					</div>
				    <% } %>
            <script>
              async function fetchAndDisplayNodeStats() {
                try {
                  const nodeStatsResponse = await fetch('/node_stats_dsa');
                  const nodeStatsData = await nodeStatsResponse.json();
                  const nodeStatsTableBody = document.getElementById('nodeStatsTableBody');
                  
                  // Leere die Tabelle, bevor neue Daten hinzugefügt werden
                  nodeStatsTableBody.innerHTML = '';
            
                  // Überprüfe, ob Daten vorhanden sind
                  if (nodeStatsData.data && nodeStatsData.data.length > 0) {
                    // Füge die Node-Statistiken zur Tabelle hinzu
                    nodeStatsData.data.forEach(node => {
                      const attributes = node.attributes;
                      const row = document.createElement('tr');
                      row.innerHTML = `
                        <td>${attributes.id}</td>
                        <td>${attributes.name}</td>
                        <td>${attributes.memory} MB</td>
                      
                        <td>${attributes.disk} MB</td>
                        
                      `;
                      nodeStatsTableBody.appendChild(row);
                    });
                  } else {
                    // Füge eine Meldung hinzu, wenn keine Daten vorhanden sind
                    const noDataRow = document.createElement('tr');
                    noDataRow.innerHTML = '<td colspan="5">Keine Node-Statistiken verfügbar</td>';
                    nodeStatsTableBody.appendChild(noDataRow);
                  }
                } catch (error) {
                  console.error('Fehler beim Abrufen der Node-Statistiken:', error.message);
                }
              }
            
              // Rufe die Node-Statistiken auf und zeige sie beim Laden der Seite an
              document.addEventListener('DOMContentLoaded', fetchAndDisplayNodeStats);
            </script>
            

            <div class="row">
              <div class="col-md-12 grid-margin stretch-card">
                <div class="card">
                  <div class="card-body">
                    <h4 class="card-title">Statistics</h4>
                    <div class="table-responsive">
                      <table class="table">
                        <tbody>
                          <thead>
                            <tr>
                              <th>total users</th>
                              <th> total servers </th>
                              <th> total locations </th>
                              <th> total Nodes </th>
                              
                            </tr>
                          </thead>
                          <td>  <span id="users">---</span> </td>
                          <td>  <span id="servers">---</span> </td>
                          <td>  <span id="locations">---</span> </td>
                          <td>  <span id="nodes">---</span> </td>

                        </tbody>
                      </table>
                    </div>
                  </div>
                </div>
              </div>
            </div>


            <div class="row">
              <div class="col-md-12 grid-margin stretch-card">
                <div class="card">
                  <div class="card-body">
                    <h4 class="card-title">Node Stats</h4>
                    <div class="table-responsive">
                      <table class="table">
                        <thead>
                          <tr>
                            <th>ID</th>
                            <th>Node Name</th>
                            <th>RAM</th>
                           
                            <th>Disk</th>
                            
                          </tr>
                        </thead>
                        <tbody id="nodeStatsTableBody">
                          <!-- Hier werden die Node-Statistiken eingefügt -->
                        </tbody>
                      </table>
                    </div>
                  </div>
                </div>
              </div>
            </div>



            <div class="row">
              <div class="col-md-12 grid-margin stretch-card">
                <div class="card">
                  <div class="card-body">
                    <h4 class="card-title">tfc-plex Version</h4>
                    <form class="forms-sample">
                      <div class="form-group">
                      <p id="latestversion"><span>Fetching...</span></p>
                    </form>
                  </div>
                </div>
              </div>
            </div>
            </div>



            <script>
              async function servers() {
                  const serverInfo = document.getElementById("servers");
                  const response = await fetch('/api/servers');
                  const json = await response.json();
                  const infoString = `${json.totalServers}`;
                  serverInfo.innerText = infoString;
              }
              servers();
              async function users() {
                  const users = document.getElementById("users");
                  const response = await fetch('/api/users');
                  const json = await response.json();
                  const usersr = `${json.totalUsers}`;
                  users.innerText = usersr;
              }
              users();
              async function locations() {
                  const locations = document.getElementById("locations");
                  const response = await fetch('/api/locations');
                  const json = await response.json();
                  const location = `${json.totalLocations}`;
                  locations.innerText = location;
              }
              locations();
              async function nodes() {
                  const node = document.getElementById("nodes");
                  const response = await fetch('/api/nodes');
                  const json = await response.json();
                  const nodes = `${json.totalNodes}`;
                  node.innerText = nodes;
              }
              nodes();
          </script>


                                    <script>
                                        fetch("https://tfc-plex.de/version/index.html")
                                            .then(res => Promise.resolve(res.json()).then(ver => {
                                                let currentver = "<%= settings.version.replace(/"/g, `\\\\"`) %>";
                                                if (ver.version == currentver) {
                                                    document.getElementById("latestversion").innerHTML = `<span>You are running TFC-Plex version <code style="color: #007fcc" >v${currentver}</code>. TFC-Plex is up-to-date!</span>`;
                                                } else if (ver.prerelease == currentver) {
                                                    document.getElementById("latestversion").innerHTML = `<span>You are running TFC-Plex version <code style="color: #007fcc">v${currentver}</code>. TFC-Plex is up-to-date!</span>`;
                                                } else {
                                                    document.getElementById("latestversion").innerHTML = `<span>tfc-plex is <b>not up-to-date!</b> The latest version is <code style="color: #007fcc" >v${ver.version}</code> and you are currently running version <code style="color: #007fcc" >v<%= settings.version %></code>.</span>`;
                                                };
                                            }));



                                            
                                    </script>
            <div class="row">
              <div class="col-md-12 grid-margin stretch-card">
                <div class="card">
                  <div class="card-body">
                    <h4 class="card-title">tfc-plex Information</h4>
                    <form class="forms-sample">
                      <div class="form-group">


                          <a href="javascript:void(0);" onclick="openPopup()" class="software-item text-white">View latest version</a> <a href="https://discord.gg/mTAbrDXv" target="_blank" class="software-item text-white">Get support</a>
                    </form>


                      <script>
                          function openPopup() {
                              var popupUrl = "https://github.com/privt00/tfc-plex/releases/latest";


                              window.open(popupUrl, "_blank", "width=1200,height=800");
                          }
                      </script>
                  </div>
                </div>
              </div>
            </div>
          </div></div>
          <%- include('./components/footer') %>
        </div>
      </div>
    </div>
    <script src="/assets/vendors/select2/select2.min.js"></script>
    <script src="/assets/vendors/typeahead.js/typeahead.bundle.min.js"></script>
    <script>
        async function submitPlan() {
            let id = encodeURIComponent(document.getElementById("IDPlan").value);
            let packagename = encodeURIComponent(document.getElementById("package").value);
            window.location.href = "/setplan?id=" + id + "&package=" + packagename
        }
        async function submitSet() {
            let id = encodeURIComponent(document.getElementById("IDSet").value);
            let cpu = encodeURIComponent(document.getElementById("SetCPU").value);
            let ram = encodeURIComponent(document.getElementById("SetRAM").value);
            let disk = encodeURIComponent(document.getElementById("SetDisk").value);
            let servers = encodeURIComponent(document.getElementById("SetServers").value);
            window.location.href = "/setresources?id=" + id + "&cpu=" + cpu + "&ram=" + ram + "&disk=" + disk + "&servers=" + servers
        }
        async function submitAdd() {
            let id = encodeURIComponent(document.getElementById("IDAdd").value);
            let cpu = encodeURIComponent(document.getElementById("AddCPU").value);
            let ram = encodeURIComponent(document.getElementById("AddRAM").value);
            let disk = encodeURIComponent(document.getElementById("AddDisk").value);
            let servers = encodeURIComponent(document.getElementById("AddServers").value);
            
            window.location.href = "/addresources?id=" + id + "&cpu=" + cpu + "&ram=" + ram + "&disk=" + disk + "&servers=" + servers
        }
        async function submitRemove() {
            let id = encodeURIComponent(document.getElementById("IDRemove").value);
            let cpu = encodeURIComponent(document.getElementById("RemoveCPU").value);
            let ram = encodeURIComponent(document.getElementById("RemoveRAM").value);
            let disk = encodeURIComponent(document.getElementById("RemoveDisk").value);
            let servers = encodeURIComponent(document.getElementById("RemoveServers").value);
            window.location.href = "/removeresources?id=" + id + "&cpu=" + cpu + "&ram=" + ram + "&disk=" + disk + "&servers=" + servers
        }
    </script>
    <%- include('./components/scripts') %>
    <script src="/assets/js/file-upload.js"></script>
    <script src="/assets/js/typeahead.js"></script>
    <script src="/assets/js/select2.js"></script>
  </body>
</html>
