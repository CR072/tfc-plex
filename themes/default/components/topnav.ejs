<nav style="background: #0b0b0fbf; z-index: 1" class="navbar p-0 fixed-top d-flex flex-row" xmlns="http://www.w3.org/1999/html">
    <div class="navbar-brand-wrapper d-flex d-lg-none align-items-center justify-content-center">
        <img src="<%= settings.icon %>" class="navbar-brand brand-logo-mini text-white" href="../dashboard">
    </div>
    <div class="navbar-menu-wrapper flex-grow d-flex align-items-stretch">
        <ul class="navbar-nav navbar-nav-right">
            <li class="nav-item dropdown">
                <a class="nav-link" href="#" id="inboxDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    <i class="fas fa-inbox"></i>
                </a>
                <div class="dropdown-menu dropdown-menu-right" style="margin-top: 100px" aria-labelledby="inboxDropdown">
                    <div id="inboxMessages"></div>
                </div>
            </li>
            <li class="nav-item dropdown">
                <a class="nav-link" id="profileDropdown" href="#" data-toggle="dropdown">
                    <div class="navbar-profile">
                        <p class="mb-0 mr-2 d-none d-sm-block navbar-profile-name"><%= userinfo.username %></p>
                        <img class="img-xs rounded-circle" src="https://cdn.discordapp.com/avatars/<%= userinfo.id %>/<%= userinfo.avatar %>.png?size=256" alt="">
                    </div>
                </a>
                <div style="background: rgba(0, 0, 0, 0.91);; padding: 15px; border-radius: 16px;" class="dropdown-menu dropdown-menu-right navbar-dropdown preview-list" aria-labelledby="profileDropdown">
                    <div class="dropdown-divider"></div>

                    <a style="border-radius: 16px; padding: 10px" class="dropdown-item preview-item" href="../settings">
                        <div class="preview-item-content">
                            <p class="preview-subject mb-1"><p class="user-subtitle"><%= userinfo.username %></p></p>
                        </div>
                    </a>

                    <a style="border-radius: 16px; padding: 10px" class="dropdown-item preview-item" href="">
                        <div class="preview-item-content">
                            <p class="preview-subject mb-1"><p class="user-subtitle"><%= packagename %> plan</p></p>
                        </div>
                    </a>

                    <a style="border-radius: 16px; padding: 10px" class="dropdown-item preview-item" href="/afk">
                        <div class="preview-item-content">
                            <p class="preview-subject mb-1">Coins: <span id="balance"></span></p>
                        </div>
                    </a>
                    <a style="border-radius: 16px; padding: 10px" class="dropdown-item preview-item" href="/dashboard">
                        <div class="preview-item-content">
                            <p class="preview-subject mb-1">Plan:
                                <% if (typeof packagename.charAt(0) == 'number') { %>
                                    <%= packagename %>
                                <% } else { %>
                                    <%= packagename.charAt(0).toUpperCase() + packagename.slice(1) %>
                                <% } %>
                            </p>
                        </div>
                    </a>
                    <div class="dropdown-divider"></div>
                    <a onclick="location.href = '../logout';" style="color: rgb(255, 47, 47); cursor: pointer;"
                        class="dropdown-item preview-subject mb-1"> Logout</a>
                </div>
            </li>
        </ul>
        <script>
            let balance = document.getElementById("balance")
            balance.textContent = Math.floor(<%= coins %> * 100) / 100
        </script>

        <button class="navbar-toggler navbar-toggler-right d-lg-none align-self-center float-right text-right" type="button" data-toggle="offcanvas">
            <i class="fa-solid fa-list-ul text-white text-right" style="margin-left: 160px;"></i>
        </button>
    </div>
</nav>

<script>
    fetch('/api/inbox')
        .then(response => response.json())
        .then(data => {
            const inboxMessages = document.getElementById('inboxMessages');

            //Check if messages are available
            if (data.messages.length === 0) {
                const noNewInboxes = document.createElement('div');
                noNewInboxes.classList.add('dropdown-item', 'text-muted');
                noNewInboxes.textContent = 'No new inboxes';
                inboxMessages.appendChild(noNewInboxes);
            } else {
                data.messages.forEach(message => {
                    // Überprüfe, ob die Nachricht für den eingeloggten Benutzer bestimmt ist

                        const messageItem = document.createElement('div');
                        messageItem.classList.add('dropdown-item');
                        messageItem.innerHTML = `
                            <strong>From:</strong> ${message.fromUser}<br>
                            <strong>Content:</strong> ${message.content}
                        `;
                        inboxMessages.appendChild(messageItem);
                    
                });
            }
        })
        .catch(error => console.error('Error fetching inbox data:', error));
</script>

<style>
    #inboxDropdown {
        position: relative;
    }

    .dropdown-item {
        transition: transform 0.3s ease, font-size 0.3s ease;
    }

    .dropdown-item:hover {
        color: white;
        transform: translateX(5px) scale(0.95);
    }

    .badge-danger {
        position: absolute;
        top: 0;
        right: 0;
        transform: translate(50%, -50%);
    }
</style>

<script>
    // Lade die JSON-Daten über JavaScript
    fetch('/api/inbox')
        .then(response => response.json())
        .then(data => {
            const inboxIcon = document.getElementById('inboxDropdown');

            // Überprüfe, ob Nachrichten vorhanden sind
            if (data.messages.length > 0) {
                // Füge ein rotes Ausrufezeichen als HTML-Span-Element hinzu
                inboxIcon.innerHTML += '<span class="badge badge-danger rounded-circle">!</span>';
            }
        })
        .catch(error => console.error('Error fetching inbox data:', error));
</script>

<script>
    // Annahme: settings.hostid und settings.name sind die zu überprüfende Host-ID und der Name
    var hostIdToCheck = "<%= settings.hostid %>";
    var nameToCheck = "<%= settings.name %>";

    // URL, von der die JSON-Daten geladen werden sollen
    var apiUrl = 'https://tfc-plex.de/api/verifydhosts.json';

    // Funktion zum Laden der JSON-Daten von der URL
    async function fetchVerifiedHosts() {
        try {
            var response = await fetch(apiUrl);
            var data = await response.json();
            return data.verifiedHosts;
        } catch (error) {
            console.error('Fehler beim Laden der Daten:', error);
            return [];
        }
    }

    // Überprüfe, ob die Host-ID und der Name in den verifizierten Hosts enthalten sind
    fetchVerifiedHosts().then(function(verifiedHosts) {
        var isHostIdVerified = verifiedHosts.some(host => host.hostId === hostIdToCheck && host.name === nameToCheck);
        var resultMessage = isHostIdVerified
            ? "<i class='text-success fa-regular fa-badge-check fa-x3'></i"
            : "<i class='text-danger fa-x3 fa-regular fa-circle-xmark'></i>This host is not verified";

        // Zeige das Ergebnis in der Div-Variable an
        document.getElementById('verificationResult').innerHTML = resultMessage;
    });
</script>